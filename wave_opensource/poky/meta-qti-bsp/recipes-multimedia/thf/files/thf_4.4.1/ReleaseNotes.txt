Sensory Confidential

Sensory TrulyHandsfree SDK Release Notes
========================================

TrulyHandsfree SDK v4.4.0 (7/28/2016)
----------
* Added support for optional AGC field in thfRecogCreateFromFile 
* Removed 'vfpv4' optimization for Android arm7 and armeabi-v7a builds.
* Modified thfTextNormalize to apply the word tokenizer model if available.
* Modified enroll tool behavior:
  - Calls thfCheckAudioQuality by default to validate audio quality.
  - Now exits on failure of enrollment checks
  - Added -f option to allow forcing of evaluation regardless of audio quality or enrollment checks.
  - The enroll tool now prints to console the estimated enrollment begin and
    end times.
  - Can specify that enrollment audio has subsequent context phrase with
    "context=" before enrollment filename.
  - added '-d' option to downgrade, if possible, adapted result to CNN.
  - added '-o' option to store audio in cache (if cache file is in use.)
* Modified enrollment task capabilities:
  - If set SAVE_ENROLLMENT_AUDIO, enrollment audio is stored in thfAdaptUser_t
    structure (thfAdaptEnrollInfo_t sub-structure).
  - task information now includes number of recommended enrollments and
    number of recommended enrollments with subsequent context.
* Added function to downgrade, if possible, from DNN to CNN
    (thfRecogDowngradeToCnn).
* Rejecting incompatible acoustic models in thfPhraseSpotCreateFromList 
* Enabled SIMD instructions on most OS's for deep neural nets
* Added support for combining deep acoustic models in thfRecogCombine
* Modified combine tool behavior
  - added '-r' option to prune resulting combined model
* Bug fix: resolved audio device check issues in some samples on linux

Known Issues
------------
* No support for combining deep acoustic models.

TrulyHandsfree SDK v4.3.3 (5/31/2016)
----------------------------------
* Refreshed Tizen make for current SDK

TrulyHandsfree SDK v4.3.2 (5/20/2016)
----------------------------------
* Port for TinyFire

TrulyHandsfree SDK v4.3.1 (1/21/2016)
----------------------------------
* Port to Chromium OS

TrulyHandsfree SDK v4.3.0 (1/14/2016)
----------------------------------
* Added thfCheckAudioQuality function to allow checking of audio quality.
* Modified pseval tool behavior:
  - Calls thfCheckAudioQuality by default to validate audio quality.
  - Added -f option to allow forcing of evaluation regardless of audio quality.
* Bug fix: resolved crash bug in thfAdaptEnrollmentQuickCheck and thfAdaptEnrollmentCheck if number of frames equals zero

TrulyHandsfree SDK v4.2.3 (12/14/2015)
----------------------------------
* Modified current issues identified by clang static analyzer to achieve clean logical analysis
* Bug fix: sdet energy mean configuration was ignored for negative values
* Bug fix: fixed mem leak in recogPrepSeq
* Bug fix: removed reset bug invalidating recogPrepSeq in tool: recogevalseq

TrulyHandsfree SDK v4.2.2 (12/09/2015)
----------------------------------
* Added support for bare-metal ARM EABI

TrulyHandsfree SDK v4.2.0 (12/04/2015)
----------------------------------
* Minor improvements in 'Adapt' enrollment process

TrulyHandsfree SDK v4.1.1 (11/06/2015)
----------------------------------
* Bug fix: resolved issue combining enrolled EFT and UDT models.

TrulyHandsfree SDK v4.1.0 (11/03/2015)
----------------------------------
* Introduces new 'Adapt' technology for performing UDT and EFT.
* Added new 'Adapt' functions (e.g., thfAdaptTaskCreate, thfAdaptEnrollmentAddTrigger, etc)
* Added 'enroll' command-line tool.
* Added recogEnroll SDK sample  
* Added documentation of new functions and command-line tool.  
* Updated Android SDK sample to an Android Studio project instead of an Eclipse project.
* Added 'accuracy' variable to adaptation for accuracy/speed tradeoff.
* Added mfcc6 acoustic model to en_us_16kHz_v11 lang pack

TrulyHandsfree SDK v4.0.5 (9/24/2015)
--------------------------------
* Added support for MIPS 24kec LE Linux build.

TrulyHandsfree SDK v4.0.4 (8/18/2015)
--------------------------------
* Added -m option to udtenroll for minimum required enrollments
* Added poor audio onset detection/filtering for UDT enrollments

TrulyHandsfree SDK v4.0.3 (7/27/2015)
--------------------------------
* Bug fix: removed sound repetition analysis from enrolled fixed triggers
  and checking single recordings.  Repetition analysis is now only performed
  for UDT enrollment checking.

TrulyHandsfree SDK v4.0.2 (7/23/2015)
--------------------------------
* Bug fix: Resolved issue with sound repetition analysis calculated during
UDT enrollment checks (see UDT_CHECK_REPETITION).

TrulyHandsfree SDK v4.0.0 (5/21/2015)
--------------------------------

* Rebrand TrulyHandsfree SDK as TrulyHandsfree SDK

* Added RecogSeq sample code showing how to perform sequential recognition (i.e., phrasespot trigger followed by commmand recognition).

* Added support for deep acoustic models:
 - New US English (en_us_16kHz_v11) language pack 

* Added support for fbank features:
 - NOTE: When performing sequential recognition (e.g. thfRecogPrepSeq), the phrasespot trigger and sequential command recognizer acoustic model must use the same feature type (ie. mfcc or fbank).

* API change: Removed experimental API functions, including:
  - thfRecogClone, thfRecogAdd, thfRecogRemove, thfSearchClone ,thfSearchAdd, thfSearchRemove, thfRtaConfigSet, thfRtaConfigGet, thfRecogTags, thfSearchTags, thfSpeakerReadyToAdapt, thfSpeakerApplyAdaptation, thfUdtEnrollEstimateParams

* API change: Removed deprecated API functions, including:
  - thfSpeakerConfigure, thfRecogConfigure, thfSearchConfigure, thfPhrasespotConfigure, thfSessionCreateWithAudio, thfWavePlay, thfWavePlayStop, thfRecogLive, thfAudioGain, thfAudioDiscardInitialSamples, thfSpeakerCombineSearchRecog, thfTuneCreateUDT, thfTuneAddDataFromDB, thfTuneCreateSearch, thfTuneDestroy, thfTuneSaveToFile, thfSessionCreateBrew

* API change: thfUdtCheckEnrollments() includes a new check that measures 
  the degree of repetition of certain sounds in an enrollment. Too much
  repetition degrades UDT performance. This is indicated by the
  `CHECKRECORDING_BITFIELD_REPETITION` feedback bit being set. The 
  repetition threshold default is value 0.15. It can be modified with the
  `UDT_CHECK_REPETITION` configuration setting.

* Modified phrasespotting to prevent spotting during delay period. This
  should only have an effect when using a very large paramAoffset.

* Android release is now built with NDK r10d and support 64-bit target architectures.

* Bug fix: udtenroll now saves the -d delay value in the search.

* Bug fix: SDK stream reading stopped early if the read routines
  returned fewer bytes that asked for. This is not a problem on file
  systems, but could be when used with (say) data streamed from
  compressed assets on an Android device.


TrulyHandsfree SDK v3.15.1 (8/26/2014)
----------------------------------
* Release notes and documentation updated.


TrulyHandsfree SDK v3.15.0 (8/14/2014)
----------------------------------
* Not released.

* License keys issued for previous releases are not valid for this release.

* Bug fix in memcpy_s implementation: Non-overlapping source and destination
  memory segments could mistakenly be flagged as overlapping. This only
  affected architectures where memcpy_s is not supplied by the
  standard C library.

* Bug fix: EPQ defaults added to recognizers initialized from static data
  structs.

* Bug fix: Requesting an N-best value larger than 5 when creating a
  search will report an error, rather than crashing (which happened
  infrequently.)

* Bug fix: thfRecogPipe() did not handle multiple sequential
  recognizers correctly.

* Bug fix: memory leak in thfPhonemeSearchDestroy() when the phoneme search
  was initialized with an old (phonemeSearch_1_4.raw) model file.

* Bug fix: thfSaveEmbedded() with markup indices for Fixed+SV grammars.

* Bug fix: thfSaveEmbedded() for long NLP .c nets (W2MAX100 now sized
  for MFCC features)

* New thfPhrasespotConfig_t value: PS_SEQ_SAMPLES.

* New thfRecogConfig_t values: REC_EPQ_NOISE, REC_SDET_STEM, REC_SDET_LTEM.

* thfUdtCacheLoadFromFile(), thfUdtCacheSaveToFile() added to udtsid.c
  example code.

* New experimental function: thfUdtEnrollEstimateParams().

* New experimental thfRecogConfig_t value: REC_EARLYSTOP_NBEST.

* New experimental thfUdtConfig_t value: UDT_DEBUG_LEVEL.


TrulyHandsfree SDK v3.14.1 (6/27/2014)
----------------------------------
* New functions: thfGetLicenseFeatures(), thfRecogCombine(),
  thfRecogSearchSaveToFile(), thfSearchPhrases().

* New command-line utility to merge recognizers: combine.

* Removed preprocessor macros SDK_TUNE, SDK_PHONEMEREC, THF_ALL_NO_FS,
  THF_RECOG_NOFS, THF_ALLTTS and THF_TTS from trulyhandsfree.h. These are no longer
  required or used.

* New thfRecogInit() keep type: RECOG_KEEP_WORD_PHONEME. This keeps word
  and phoneme alignments without also keeping and audio buffer.

* New recognizer configuration settings:
  REC_KEEP_FEATURES, REC_SV_ADJUST_METHOD,
  REC_SV_ADJUST1, REC_SV_ADJUST2, REC_SV_ADJUST3, REC_SV_ADJUST4,
  REC_PARAMA_ADJUST_METHOD, REC_PARAMA_ADJUST1, REC_PARAMA_ADJUST2, 
  REC_PARAMA_ADJUST3, REC_PARAMA_ADJUST4, REC_USE_FEAT.

* New phrase spot configuration settings:
  PS_SEQ_SPOT_OPTIONAL, PS_SEQ_SPOT_INCLUDED.

* New UDT configuration settings: UDT_USE_FEAT, UDT_TRAIN_ITERATIONS,
  UDT_TRAIN_ITERATIONS_WITHIN, UDT_LEARN_RATE, UDT_LEARN_RATE_WITHIN,
  UDT_DROPOUT_WITHIN, UDT_ADAPT_TYPE.

* New UDT preprocessor default value macros:
  UDT_DEFAULT_USE_FEAT, UDT_DEFAULT_TRAIN_ITERATIONS, 
  UDT_DEFAULT_TRAIN_ITERATIONS_WITHIN, UDT_DEFAULT_LEARN_RATE, 
  UDT_DEFAULT_LEARN_RATE_WITHIN, UDT_DEFAULT_DROPOUT_WITHIN, 
  UDT_DEFAULT_ADAPT_TYPE.

* New FPSV configuration settings: SPEAKER_USE_FEAT, SPEAKER_TRAIN_ITERATIONS,
  SPEAKER_TRAIN_ITERATIONS_WITHIN, SPEAKER_LEARN_RATE, 
  SPEAKER_LEARN_RATE_WITHIN, SPEAKER_DROPOUT_WITHIN, SPEAKER_ADAPT_TYPE.

* New FPSV preprocessor default value macros:
  SPEAKER_DEFAULT_USE_FEAT, SPEAKER_DEFAULT_TRAIN_ITERATIONS, 
  SPEAKER_DEFAULT_TRAIN_ITERATIONS_WITHIN, SPEAKER_DEFAULT_LEARN_RATE, 
  SPEAKER_DEFAULT_LEARN_RATE_WITHIN, SPEAKER_DEFAULT_DROPOUT_WITHIN, 
  SPEAKER_DEFAULT_ADAPT_TYPE.

* Bug fix in EPQ; bug was preventing spotting in some cases.

* Session RAM overhead reduced from 120 kB to around 320 bytes.

* Bug Fix: resolved cross-platform issues related to static dump files:
  - nn and lts raw files now dump correctly on linux
  - on linux attempts to free static memory are now disallowed.

* Modified shared audio routines for SDK Samples to support the use of
  file-inputs (e.g. .wav files) to simulate microphone input.

* Added description of search points for fixed-phrase SV to documentation.

* Added description of enrollment recording quality to SV/SID/UDT documentation.  
* Added note to documentation to let user know to (eventually) destroy results
  from thfUdtEnroll() and thfSpeakerEnroll()  

* Added note to documentation that newer phoneme search objects (pRec2) always
  use newer method of phoneme recognition.

* Bug fixes in multi-user fixed-phrase SV enrollment.

* Bug fix: UDT enrollment could produce an error on some non-speech files using
  the newer version of phoneme recognition objects (pRec2). Fixed.  

* thfSaveEmbedded and the deepdump utility remove unused parameters from
  combined source acoustic models to produce optimized DSP data files.


TrulyHandsfree SDK v3.14.0 (6/18/2014)
----------------------------------
* Not released.


TrulyHandsfree SDK v3.13.2 (5/2/2014)
---------------------------------
* Modified phoneme recognizer to return phoneme scores as 0.

* Modified phoneme recognizer to prune less so it's more likely to return
  a useable pronunciation.

* Bug fix: resolved stamping issue in phoneme recognizer (pRec2) pipeline:
 - Bad timestamps often caused incorrect result to be returned (usually .pau).

* thfRecogResult now applies speech detector alignments to phoneme recognizer
  (pRec2) result.

* Bug fix: clean out backtrace during phoneme recognizer (pRec2) reset.

* Bug fix: dumping DSP search file:
 - DPP phoneme array was missing; Only an issue with combined SV models

* Bug fix: thfSpeakerCombineSearchRecog now writes phrasespot delay into
  recog object:
 - Caused thfSpeakerSaveRecogToFile to save the delay wrong value.

* Bug fix: thfSaveEmbedded mishandled PHRASESPOT_DELAY_ASAP condition
 - Was treating it as a standard delay (msec) resulting in a corrupt value

* Bug fix: thfRecogPipeFlush mishandled PHRASESPOT_DELAY_ASAP condition
  - Flushed more audio than needed
  - Caused thfRecogPipe to store more audio than needed

* Bug fix: resolved issue when dumping deeply-embedded DSP models for
  cs38 target.

* Updated documentation:
  - thfGetLicenseExpiration 


TrulyHandsfree SDK v3.12.6 (4/30/2014)
----------------------------------
* Added support for Tizen (build script addition, one minor change for GCC). 


TrulyHandsfree SDK v3.12.5 (4/17/2014)
----------------------------------
* Bug fix: resolved DSP dump issues in thfSaveEmbedded() and deepdump tool:
  - PHRASESPOT_DELAY_ASAP now dumped correctly
  - Combined SV models now dumped correctly

* Bug fix: thfSpeakerCombineSearchRecog now saves phrasespot delay value.


TrulyHandsfree SDK v3.13.1 (4/04/2014)
----------------------------------
* Bug fix: resolved potential UDT enrollment error when enrolling non-speech files with latest phoneme recognition model.

* Bug fix: resolved memory issues when using fixed-phrase SV enrollment with multiple users.

* Updated documentation:
 - Added fixed-phrase SV search point description.
 - Added SV/SID/UDT enrollment recording quality description. 
 - Added note that thfUdtEnroll() and thfSpeakerEnroll() returned objects should destroyed when no longer needed.
 - Added note that the latest phoneme search model employs a new phoneme recognition method.


TrulyHandsfree SDK v3.12.4 (4/02/2014)
----------------------------------
* API change: New thfSpeakerCombineSearchRecog() function. Adds support for
  fixed-phrase speaker verification where multiple users enroll with different
  phrases. 
* Enable models generated by thfSpeakerEnroll() to be used for speaker
  verificaiton immediately without needing to save and load them to/from
  file first.
* Bug fix: resolved infrequent crash bug in UDT phoneme recognizer.
* Updated documentation


TrulyHandsfree SDK v3.12.3 (3/21/2014)
----------------------------------
* Bug fix: Resolved issue with clippingMsec and clippingPercent calculations that caused unreliable clipping feedback by thfCheckRecording/thfUdtCheckEnrollment/thfSpeakerCheckEnrollment

* thfUdtCheckEnrollment now refreshes audioSignature field in thfUser_t when data is already cached. Prevents 'audioSignature does not match cached data' error if application mismanages thfUser_t data.

* Bug fix: resolved crash when failing to call thfSpeakerCreateFromFile() before using thfRecogPipe() with an RTA model.

* Updated default thresholds used by thfCheckRecording/thfUdtCheckEnrollment/thfSpeakerCheckEnrollment:
  - RECORDING_VARIANCE changed from 500 to 50.
  - POOR_RECORDINGS changed from -500 to -150.
  - SIL_BEG_MSEC and SIL_END_MSEC changed from 60 to 180.

* Improved handling when deleting a UDT user

* Updated documentation


TrulyHandsfree SDK v3.13.0 (3/14/2014)
----------------------------------
* Integrated new phoneme recognizer algorithm (pRec1 -> pRec2). 
  - Upgraded enUS model: phonemeSearch_1_4.raw -> phonemeSearch_1_5.raw
  - Modified datalocations.h Sample file to use phonemeSearch_1_5.raw

* Bug fix: Resolved issue with clippingMsec and clippingPercent calculations that caused unreliable clipping feedback by thfCheckRecording/thfUdtCheckEnrollment/thfSpeakerCheckEnrollment 

* Bug fix: resolved crash when failing to call thfSpeakerCreateFromFile() before using thfRecogPipe() with an RTA model.

* thfUdtCheckEnrollment now refreshes audioSignature field in thfUser_t when data is already cached. Prevents 'audioSignature does not match cached data' error if application mismanages thfUser_t data.

* Updated default thresholds used by thfCheckRecording/thfUdtCheckEnrollment/thfSpeakerCheckEnrollment: 
  - RECORDING_VARIANCE changed from 500 to 50.  
  - POOR_RECORDINGS changed from -500 to -150. 
  - SIL_BEG_MSEC and SIL_END_MSEC changed from 60 to 180.

* Renamed REC_HISTORY speech detector parameter introduced in v3.12.2 to REC_KEEP_SDET_HISTORY.

* New experimental and unsupported speech detector settings:
  - REC_SDET_EDIFF, set to 0 to use energy ratio instead of energy difference.
  - REC_SDET_INITIAL_DELAY, delays speech detector updates for this number of milliseconds.

* New experimental and unsupported recognizer setting:
  - REC_KEEP_FEATURE_HISTORY, set to 0 to reinitialize recognizer features when the recognizer is reset. The default, 1, preserves previous behavior.

* New preprocessor macro: THF_VERSION_ID. This is a unique counter that will be incremented with each public release of the SDK.

* Updated documentation relating to UDT and thfUdtCacheSaveToFile/thfUdtCacheLoadFromFile.


TrulyHandsfree SDK v3.12.2 (2/6/2014)
---------------------------------
* API change: New thfRecogConfig[SG]et types:
  - REC_HISTORY, set to 0 for thfRecogReset() to reset speech detector 
    history. The default is 1, which preserves previous behavior. 
  - REC_THI, sets tHi speech detector parameter ** explain? **
  - REC_BACKOFF, sets recognizer backoff parameter. 

* Bug fix: thfCheckEnrollment now returns an error message if user_t struct contains no audio.

* Bug fix: reworked phoneme recognizer internals:
  - addressed potential timestamping issues
  - improved handling of empty phonemes


TrulyHandsfree SDK v3.12.1 (2/5/2014)
---------------------------------
* API change: thfSaveEmbedded() takes new "trigger" argument.

* API change: Added support for EPQ_SCORE parameter with thfRecogConfigGet to return EPQ score. 

* Updated phonemeRecogizer model 1.3 -> 1.4.
   - Updated samples (datalocations.h) to use 1.4

* Updated documentation:
 - Added EPQ Guidelines to documentation
 - thfSpeakerInit() recommended delay values.
 - Describe which recognizer and search parameters saved to file.

* The numUsers parameter to thfUdtEnroll() must be one more than the maximum user index used in calls to thfUdtCheckEnrollments(). thfUdtEnroll() will now report an error otherwise. 

* Bug fix: resolved intermittent empty phonemes returned by phoneme recognizer

* Bug fix: resolved intermittent bad timestamps returned by phoneme recognizer

* Bug fix: rewrite any empty phonemes in recognition result as .pau 

* Bug fix: avoid writing out-of-bounds if phoneme recognizer result is empty

* Bug fix: resolved crash bug if thfUdtCheckEnrollment fails to find pronunciation.

* Bug fix: thfUdtEnroll now returns error if trying to enroll poor recordings.

* Bug fix: avoid accessing array out of bounds if result string is empty.

* Bug fix: thfRecogCreateFromList may return incorrect word mark-up when vocabulary references all phonemes in language.

* Bug fix: TTS sample created an unexpected debug log.

* Bug fix: Japanese vowel /4/ was missing from vowel list, causing inappropriate rejection of utterances in UDT.

* Bug fix: getPhraseQuality() returned score of 0 if wave has no pronunciation.

* Behavior modification: EPQ is enabled during calls to thfUdtEnroll() or thfSpeakerEnroll(). It can be disabled by a subsequent call to thfRecogConfigSet().


TrulyHandsfree SDK v3.12.0 (12/24/2013)
-----------------------------------
* Bug fix: thfSearchConfigGet() did not return actual values for SCH_PRUNING and SCH_BEAM.

* Changed default value of fixed-phrase speaker verification SPEAKER_TRIGGER_SAMP_PER_CAT from 60 to 256.

* Bug fix in EPQ; new results are nearly identical with previous version.

* Added new parameters and a new target to DSP output.

* deepdump tool:
  - Added "trigger" flag to require specification of whether dumping trigger or not.
  - Added configuration file to allow specification of new optional parameters.  - Changed behavior to always output .h file.

* Changed API for thfSpeakerConfigSet() and thfSpeakerConfigGet() to take and return floating-point instead of integer values; keys are now specified using enum type.

* Added new features to fixed-phrase speaker verification enrollment, namely paramAoffset, withinCat, targetSNR, durMinFactor, and durMaxFactor.

* When using new parameters for fixed-phrase speaker verification, EPQ should be turned ON using thfRecogConfigSet() with REC_EPQ_ENABLE.

* EPQ settings are now written with other recognizer parameters to file, and read from a recognizer file.

* Added EPQ_ENABLE and EPQ_MIN as parameters read from config file in svenroll and udtenroll tools.

* Updated SpeakerVerification and udtsid sample applications.

* New recommended settings for fixed-phrase speaker verification (FPSV):
  1. Adopt new default parameters defined in trulyhandsfree.h.
  2. Either at enrollment time or at runtime, configure the following parameter using thfRecogConfigSet():
    - EPQ_ENABLE = 1

* Backwards compatibility: to preserve previous FPSV (SDK v3.11.0) behavior, use thfSpeakerConfigSet() to configure the following parameters, prior to calling thfSpeakerEnroll() :-
  - SPEAKER_TRIGGER_SAMP_PER_CAT = 60
  - SPEAKER_TARGET_SNR = 1024
  - SPEAKER_DUR_MIN_FACTOR = any value greater than SPEAKER_DUR_MAX_FACTOR
  and use thfRecogConfigSet() to configure the following, prior to calling thfSpeakerEnroll() :-
  - PS_PARAM_A_OFFSET = 0

* UDT_DEFAULT_PARAM_A_START changed from -800 to -1100.

* Code revision in UDT phrase quality score computation; new values are lower by 0.014 on average.

* New functions: thfRecogPrepSeq(), thfUdtCacheLoadFromFile() and thfUdtCacheSaveToFile().


TrulyHandsfree SDK v3.11.0 (11/4/2013)
-----------------------------------
* Updated Documentation

* Updated Sample code:
  - udtsid: Added EPQ configuration 
  - udtsid: Added phrasespot quality feedback

* Distributed now includes a single static library: thf.lib (libthf.a on certain platforms); Other variants are now retired. 

* Changed the default UDT sanitization level from 2 to 5 (UDT_DEFAULT_SANITIZE is defined in trulyhandsfree.h).

* New UDT feature: Added support for a dBA filter to UDT enrollment. Configurable using the UDT_DBA_FILTER parameter (1=ON, 0=OFF, Default=ON). 

* New UDT feature: Added support for pop/click filter to UDT enrollment. Configurable using the UDT_POP_THRESH parameter (0=OFF, Default=10). Use 0 to duplicate previous behavior.

* New UDT feature: Added support for noise-mixing during UDT enrollment. Configurable using UDT_TARGET_SNR parameter (0=OFF, Default=20). 

* New feature: Added support for (EPQ) during runtime phrasespot recognition (also applicable to UDT and SV runtime). Configurable using EPQ_ENABLED (default=OFF) and EPQ_MIN (default=-5). NOTE: EPQ is not yet supported at the DSP level.

* Changed UDT default paramAstart parameter from -1300 to -800. (UDT_DEFAULT_PARAM_A_START is defined in trulyhandsfree.h). NOTE: this assumes that EPQ will be enabled.

* Changed REC_CHECK_ENERGY_MIN and UDT_CHECK_ENERGY_MIN default threshold from 60.0 to 30.0. 

* Modified phoneme recognition behavior to return at least one result.

* New recommended settings for UDT: 

  1. Adopt new default parameters defined in trulyhandsfree.h. 

  2. Enrollment: discard recordings if the phrase quality score is less than 0.35.

  3. Runtime: Configure the following runtime parameters using thfRecogConfigSet():

    - EPQ_ENABLE = 1

* Backwards compatibility: to preserve previous UDT (SDK v3.10.2) behavior, use thfUdtConfigSet() to configure the following parameters :- 

  - UDT_SANITIZE = 2
  - UDT_DBA_FILTER = 0 
  - UDT_POP_FILTER = 0
  - UDT_TARGET_SNR = 1024
  - UDT_PARAM_A_START = -1300

NOTE: Exact prior behavior may not be reproducible due to bug fixes.

* thfSaveEmbedded() now returns an error if the specified TARGET is unknown; Previous behavior was to save files in a default format.
  
* deepdump tool:
  - Revised supported arguments
  - Support for non-phrasespot searches
  - New targets supported
  - Prints expiration date
  - Added comment header to dumped files 

* udtenroll tool:
 - Ignore empty lines in configuration file 
 - Add phrase quality feedback
 - Support for new configuration parameters

* svenroll tool:
 -  Ignore empty lines in configuration file 

* pseval tool:
 -  Support for new arguments to support EPQ

* Updated error message returned by thfUdtEnroll() if unable to generate a pronunciation due to bad input. 

* Removed unpublished parameters from trulyhandsfree.h: REC_EPQ_SHORTTERMMS, REC_EPQ_LONGTERMMS, REC_EPQ_MINRATION

Bug Fixes:

* Fixed several phoneme recognizer bugs producing improved phoneme sequences and alignments.

* Fixed memory leaks in UDT

* Resolved thfSpeakerVerify() memory allocator error during internal call to free().

* Corrected speech detector end-time if tsilence is larger than input audio 

* Resolved crash in udtenroll tool if unable to generate pronunciation due to bad input.


TrulyHandsfree SDK v3.10.3 (10/22/2013)
-----------------------------------
* Bug fix: thfSpeakerVerify() crashed free()ing an internal memory structure.

 
TrulyHandsfree SDK v3.10.2 (08/22/2013)
-----------------------------------
* Upgraded lts model : lts_en_us_9.5.2 -> lts_en_us_9.5.2b 

* Upgraded phonemeSearch model: phonemeSearch_1_2 -> phonemeSearch_1_3

* Improved error reporting for UDT-related calls.

* Fixed: sdet command-line utility that crashed when used with an RTA
acoustic model file.

* Updated svEnroll and udtEnroll command-line tools:
 - Modified to always report enrollment-check summary; Previously only did so when using verbose flag.
 - Modified output print format.  

* Implemented new phoneme recognizer algorithm

* Added support for configurable phoneme recognizer search type:
 - thfRecogConfigGet/Set() supports REC_PHONEMEREC_SEARCH_TYPE parameter
 - thfUdtConfigGet/Set() supports UDT_PHONEMEREC_SEARCH_TYPE parameter
 - Value: 1=newType (default); 0=oldType  

* Added support for pipelined using phoneme recognition with UDT; Speeds up thfUdtCheckEnrollment phase considerably.

* Updated udtsid sample code to use pipelined phoneme recognition with UDT

* Changed polarity of RECOG_CHECK_POOR_RECORDING/UDT_CHECK_POOR_RECORDING parameter supported by thfRecogConfigGet/Set() and thfUdtConfigGet/Set(). Previously the polarity was switched internally. Now expects a negative value and returns an error if attempting to set to positive value.

* Added support for checking recordings that are saturated but not clipped.

* Added support pronunciation sanitization in UDT. Use UDT_SANITIZE paramter with thfUdtConfigGet/Set(). Supported values: oldMethod=1, newMethod=2, defaultMethod=2.

* Added support for duration modification in UDT. Use parameters UDT_DUR_MIN_FACTOR and UDT_DUR_MAX_FACTOR. Defaults are 0.50 and 1.25, respectively.  Old behavior can be replicated by setting 'min' value greater than 'max' value.

* Changed default behavior of UDT_IGNORE_TYPE from 0 to 1.

* Changed behavior of thfUdtCheckEnrollments() to return 'POOR_RECORDINGS' flag for ALL enrollments if no valid pronunciation can be computed.

* Added support for new UDT parameters to udtenroll command-line tool.

* Improved thfCheckRecording() behavior to be somewhat more robust in noise. Previously CHECKRECORDING_BITFIELD_SIL_BEG_MSEC and/or CHECKRECORDING_BITFIELD_SIL_END_MSEC enrollment checks often failed.

* Updated documentation of UDT parameters

* Added support for minimum total vowel duration to enrollment checks. See REC_CHECK_VOWEL_DUR/UDT_CHECK_VOWEL_DUR parameter.

* Updated default values of UDT for better overall performance, including:
  - PARAM_A_START: -1300
  - SAMP_PER_CAT: 512
  - SAMP_PER_CAT_WITHIN: 16
  - IGNORE_TYPE: 1
  - SIL_PERCENT: 10
  - NOISE_PERCENT: 40 


TrulyHandsfree SDK v3.10.1 (07/09/2013)
-----------------------------------
* Platform:
 - ix86-win
 - x64-win
 - Android
 - ix86-linux
 - x86_64-linux

* Bug fix: SV enrollment acoustic model adaptation, related to new
  settings introduced in 3.10.0.

* Bug fix: deep dump search structure related to .pau usage.

* trulyhandsfree.h: renamed 'void *private' prototype arguments in
  thfRecogCreateFromFunc() and thfSearchCreateFromFunc() to
  'void *privateData' to avoid C++ reserved word clash.


TrulyHandsfree SDK v3.10.0 (07/02/2013)
-----------------------------------
* Platform:
 - ix86-win
 - x64-win
 - Android
 - ix86-linux
 - x86_64-linux

* Static code analysis performed, all reported issues addressed.

* Added SAMP_PER_CAT_WITHIN, IGNORE_TYPE, SIL_PERCENT, and NOISE_PERCENT
  parameters to UDT to give user more control over behavior.  Defaults
  are set to dupliate current performance, but other values may become
  the defaults later.

* Updated udtenroll app to use new UDT parameters in config file.

* Bug fix in findSpeechByEnergy() on some platforms

* These integrated audio API functions are now deprecated:
   thfSessionCreateWithAudio(), thfWavePlay(), thfWavePlayStop(),
   thfRecogLive(), thfAudioGain(), thfDiscardInitialSamples().
  Do not use these in new code, as they will be removed from a future release.
  Using deprecated functions will raise compiler warnings. Define the
  NO_DEPRECATED_API_WARNINGS preprocessor macro to avoid these.

* New experimental functions:
  thfRecogAdd(), thfRecogClone(), thfRecogRemove(), thfRecogTags(),
  thfRtaConfigGet(), thfRtaConfigSet(),
  thfSearchAdd(), thfSearchClone(), thfSearchRemove(), thfSearchTags(),
  thfSpeakerAppyAdaptation() and thfSpeakerReadyToAdapt().

* This release includes static library files (*.a, *.LIB) only.
  The Windows versions no longer include the thfSDKStubs.c file, which was
  used to load DLLs on demand.


TrulyHandsfree SDK v3.9.4 (06/24/2013)
----------------------------------
* Platform:
 - ix86-win
 - x64-win
 - Android
 - ix86-linux
 - x86_64-linux

* sdet command line tool:
 - Bug fix: no output file created if no speech was detected. 

* Android sample app:
 - Buf fix: memory leaks in JNI code.

* Ammended:
 - changed UDT and svspot searches to contain additional information
   used during search; may have small effect on performance.

TrulyHandsfree SDK v3.9.3 (06/17/2013)
---------------------------------
* Platform:
 - ix86-win
 - android

* svenroll command-line tool: 
 - Removed internal hard-coded longpen parameter
 - Added optional 'ignorepause' -p flag

* thfSpeakerEnroll(): removed hard-coded delay parameter

* thfSpeakerRecogSaveToFile(): now saves correct longpen parameter

* thfCheckEnrollments():
 - Modified CHECK_CLIPPING_MSEC behavior
 - Modified CHECK_RECORDING_VARIANCE behavior
 - Modified CHECK_POOR_RECORDINGS behavior


TrulyHandsfree SDK v3.9.2 (06/07/2013)
---------------------------------
* Platform:
- iOS

* Bug fix: resolved speech detector overrun in RECOG_MAXREC case

* Modified SpeakerVerification Sample to handle RECOG_MAXREC and RECOG_SILENCE speech detector return states.


TrulyHandsfree SDK v3.9.1 (06/03/2013)
---------------------------------
* Platform:
- iOS

* Modified thfRecogResult() to return DSP-compatible score when performing SV recognition.

* Removed sdet longtermms conditional override (now honors user configuration)

* Added error msgs to svEnroll/udtEnroll if no user name provided

* Klocwork static code analysis fixes


TrulyHandsfree SDK v3.9.0 (05/16/2013)
---------------------------------
* Platform:
- android
- ix86-win
- x64-win

* Bug fix: thfPhrasespotConfigGet() now returns the correct value
  of paramAOffset.

* Deprecated functions: thfRecogConfigure(), thfPhrasespotConfigure(),
  thfSearchConfigure(). Using these functions will raise compiler
  warnings. Define the NO_DEPRECATED_API_WARNINGS preprocessor macro
  to avoid the warnings.

* New speaker verification functions: thfSpeakerCheckEnrollments(),
  thfSpeakerEnroll(), thfSpeakerSaveRecogToFile(). NOTE: these
  functions are recommended over the previous low-level API.

* New search configuration functions: thfSearchConfigSet(),
  thfSearchConfigGet().

* New phrasespot configuration functions: thfPhrasespotConfigSet(),
  thfPhrasespotConfigGet().

* New thfUdtConfig_t and thfRecogConfig_t values for setting/getting
  parameters used to check audio data in thfUdtCheckEnrollements(),
  thfCheckRecording().

* New utility function: thfMalloc().

* New data structures: thfUser_t and thfEnrollment_t added to
  trulyhandsfree.h. Previously these were implemented at the application
  level. They are now required input arguments to thfSpeakerEnroll()
  and thfUdtEnroll().

* Reworked SpeakerVerification SDK Sample to use new recommended
  enrollment API.

* API change: removed 'relativeScore' argument from thfSpeakerVerify()

* API change: thfUdtConfigSet(), thfUdtConfigGet() value argument
  changed to a float.

* API change: renamed 'scoreDiff' check enrollments parameter to
  'recordingVariance'. See thfUdtCheckEnrollments(),
  thfSpeakerCheckEnrollment().

* API change: Added new 'poor recordings' parameter to check
  enrollments that evalutes the overall quality of all
  enrollments. See thfUdtCheckEnrollments(),
  thfSpeakerCheckEnrollment().

* Android platform: Added SDK libraries for additional CPU targets:
  android-armv7a, android-x86.

* Modified Android SDK Sample to support multiple CPU targets: 
 - Added Application.mk
 - Reworked Android.mk 
 - Added platform-specfic libraries to the FluentSDK folder

* Added new command-line tools:
 - sdet: supports speech detection of input wave file
 - svenroll: performs fixed-phrase speech verification enrollment
 - recogeval: supports non-phrasespot recognizer evaluation

* Modified udtenroll command-line tool:
 - added support for configurable thresholds
 - supports variable number of enrollment wave files

* Speeded up UDT enrollment by internally caching pronunciation
  estimation. See thfUdtEnroll().

* Added configurable thresholds for UDT enrollment quality checks. See
  thfUdtCheckEnrollments(), thfUdtConfigSet().

* Added thfUdtDestroy() memory clean-up call to Udtsid Sample code.

* Bug fix: resolved issue with clipping check calculation in
  thfCheckRecording() and thfUdtCheckEnrollment().

* Bug fix: Android SDK Samples: resolved incorrect native function definition return types in Console.java

* Bug fix: thfUdtEnroll() no longer generates NULL pronunciations.

* Documentation fix: Removed ParamD from thfTuneCreateUDT() argument list.

* Minor improvements to the UDT algorithm.

* pseval tool: optional verbose output is now printed to stdout
  instead of stderr.


TrulyHandsfree SDK v3.8.3 (3/11/2013)
---------------------------------
* Platform:
- arm-android
- ix86-win
- x64-win

* Initial 64-bit SDK for Windows.
* Udtsid sample: replaced phoneme recognizer with speech-detector-only for faster enrollment
* Bug fixes: 
 - Phrasespotting crashed in certain conditions with RECOG_KEEP_NONE flag 
 - Udtsid sample: resolved memory leak; user structs and feedbackArray not freed. 
 - BuildList sample: resolved issue if names.txt contains an empty line(s).
 - Allow thfRecogResult to return audio if no search and no alignments available.
 - Added check for empty pronunciations in UDT. 


TrulyHandsfree SDK v3.8.2 (3/9/2013)
---------------------------------
* Platform:
- arm-android
- ix86-win

* Implemented new functionality to check quality of recordings for 
  user-defined triggers (UDT) and passphrases, both in isolation and 
  as an enrollment set.  It is up to the application to check this
  feedback and obtain new enrollment recordings as necessary.
* Created new and much simpler API for UDT enrollment, following the 
  standard convention of initialize, (optional) configure, process, 
  and destroy.
* Updated udtsid sample code to use new simpler API.
* Added recogeval command-line tool. Supports recognition from wave file using pre-built non-phrasespot vocabulary.
* Added deepdump command-line tool. Supports dumping of pre-built acoustic model/search files in DSP format.
* Modified recognizer pipeline behavior to process all audio up to end of speech detected region; Previously it skipped trailing silence region.


TrulyHandsfree SDK v3.7.2 (3/4/2013)
---------------------------------
* Platform:
- arm-android
- ix86-linux
- ix86-win
* recog.c: Fixed: Potential memory leaks (Klockwork),
   thfRecogSampleConvert() failed on long files.
* thfSaveEmbedded: added support for little/big endian, packed/unpacked dumps.
* pseval: default delay is now PHRASESPOT_DELAY_ASAP if the -d
  parameter is not specified, and the search file does not contain a
  delay value. 

TrulyHandsfree SDK v3.7.1 (1/30/2013)
---------------------------------
* Platform:
 - arm-android
 - ix86-win
* Fixed various memory leaks.
* Expanded thfSaveEmbedded to support ".bin" file extension
* Upgraded "ma36" embedded dump format
* Added 'udtenroll' tool 
* Added SV support to 'pseval' tool


TrulyHandsfree SDK v3.7.0 (1/25/2013)
---------------------------------
* Platform:
 - arm-android
* Improved PHRASESPOT_DELAY_ASAP behavior
* Changed default phrasespot delay from 0 to PHRASESPOT_DELAY_ASAP
* Added support for automatic phrasespot parameter selection
* New API function: thfPhrasespotCreateFromList
* Added range checks to thfPhrasespotConfigure() for paramAOffset, delay and absBeam phrasespot parameters.
* Removed the need for UDT database when performing SVSID with fixed paramA,paramB values
* Added error strings to thfSaveEmbedded()
* Bug fix: resolved issue when performing speaker verification from file
* Bug fix: resolved issue disabling gender detection in phrasespot sample
* Fixed various memory leaks.

TrulyHandsfree SDK v3.6.1 (12/21/2012)
----------------------------------
* Platform:
 - ix86-win
 - arm-android
* Bug fix: SV performance degradation issue introduced in 3.5.1 resolved.
* Experimental PHRASESPOT_DELAY_ASAP value introduced: Delays returning a phrase spot result if there is a reasonable probability that another phrase may outscore it in the near future.


TrulyHandsfree SDK v3.6.0 (12/19/2012)
----------------------------------
* Platform:
 - ix86-win
 - arm-android
* UDT performance enhancements
* Updated data files:
  - nn_en_us_mfcc_16k_15_big_250_newline_v5.0.raw -> nn_en_us_mfcc_16k_15_big_250_v5.1.1.raw
  - svsid_and_udt_1_0.raw -> svsid_and_udt_1_1.raw
* Relocated data files to data/en_us_16kHz_v10
  - phonemeSearch_1_2.raw
  - svsid_and_udt_1_1.raw
  - svsid_1_1.raw
  - udt_1_1.raw
* Updated parameters in UDTSID sample code
* Bug fix: thfSdetForceDone() updates speech detector end time correctly 

IMPORTANT: any existing searches will need to be re-built if switching to the new acoustic model


TrulyHandsfree SDK v3.5.1 (12/07/2012)
----------------------------------
* Platform:
 - ix86-win
 - arm-android
* New API functions: thfRecogPipeFlush
* Added HTML documentation (for ix86-win).
* thfRecogPrep resets feature and sdet mean before prepping.
* Updated embedded dump format.
* Bug fix to UDT pronunciation extraction and tuning.
* Enabled UDT code to read SV data for a previously-enrolled user.
* Updated Adela TTS voice.
* TTS sample code uses Sally voice database instead of Adela.
* Process remaining audio samples in current block after phrasespotting. Impacts future results and timestamps if thfRecogReset is not called.
* Updated UDTSID sample: 
  - Modified recommended parameters.
  - Added support for UDT-only mode.
  - Modified speech detector parameters.
* Phrase-spotter command line evaluator added (pseval).


TrulyHandsfree SDK v3.4.0 (11/21/2012)
----------------------------------
* Platform:
 - ix86-win
 - arm-android
* Modified phrasespot result to return final combined score.
* Removed (zeroed) phrasespot word and phoneme alignment segmentation scores
* Improved robustness of UDT+SID enrollment
* Fixed a problem with pipelined use of thfRecogSampleConvert() where
   the size of the input buffer affected the result.
* Modified library license checking.
* Resolves potential phrasespot parameter incompatibility in SDK v3.2.x.
* New API functions: thfSaveEmbedded, thfSdetForceDone, thfRecogPrep
* Implements internal search structure: searchfC14
  - Automatically converts earlier versions: searchfC12 and searchfC13
* Fixed memory issues when phrasespotting w/o calling thfRecogReset
* Fixed possible memory leak in thfSearchDestroy


TrulyHandsfree SDK v3.2.1 (10/31/2012) 
----------------------------------
* Fixed incorrectly generated TTS prosody when PROSODY_DOMAIN == NAMES.


TrulyHandsfree SDK v3.2.0 (10/30/2012)
----------------------------------
* Small footprint TTS engine, suitable for caller-ID announcements:
 - thfTtsCreateFromFile, thfTtsCreateFromStatic, thfTtsSynthesize,
    thfTtsConfigGet, thfTtsConfigSet, thfTtsPrep, thfTtsGetFrame,
    thfTtsReset, thfTtsDestroy.
* New API functions:
 - thfTuneCreateFromFile
 - thfTuneSaveToFile
 - thfSpeakerList
* Modified API functions:
 - thfTuneCreateUDT
 - thfTuneAddDataFromDB
 - thfTuneCreateSearch
* Deleted unused function:
 - thfSearchInitSV
* Allow paramA values to become positive when using paramAOffset 
* Bug fixes that may improve performance and/or memory usage of UDT
* Updated udtsid sample code to use new API


TrulyHandsfree SDK v3.1.0 (10/03/2012)
--------------------------------
* Platform:
 - ix86-win
* Support for demo/expiring license keys.
* User-Defined-Triggers
* New API functions: thfGetLicenseExpiration,
   thfRecogCreateFromFunc, thfRecogCreateSub, thfSearchCreateFromFunc,
   thfSearchInitSV, thfRecogSVscore
   thfSpeakerConfigSet, thfSpeakerConfigGet, thfFreeFeats
   thfSpeakerCombineAndSaveToFile
   thfTuneCreateUDT, thfTuneAddDataFromDB, thfTuneCreateSearch, thfTuneDestroy
   thfPhonemeSearchCreateFromFile, thfPhonemeRecogInit, thfPhonemeSearchDestroy
* Uses internal search structure: searchfC13


TrulyHandsfree SDK v3.0.3 (07/13/2012)
--------------------------------
* Platform:
 - ix86-win


TrulyHandsfree SDK v3.0.3 (07/09/2012)
--------------------------------
* Platform:
 - arm-android
* Reworked Android SpeakerVerification and SpeakerIdentification Samples to avoid audio buffer overflow


TrulyHandsfree SDK v3.0.2 (07/09/2012)
--------------------------------
* Platform:
 - arm-darwin 


TrulyHandsfree SDK v3.0.2 (07/06/2012)
--------------------------------
* Platform:
 - arm-android
* Resolved empty SV antiData file: en_us_16kHz_v10/generic_antiData_v5_0.raw


TrulyHandsfree SDK v3.0.1 (07/05/2012)
--------------------------------
* Platform:
 - arm-darwin
* Included images in html documentation
* Bug Fix: thfSpeakerSaveToFile data format; SV scores differed after save/load
* Bug Fix: thfSpeakerSaveToFile container update
* Bug Fix: error handling condition if thfSpeakerSaveToFile failed 


TrulyHandsfree SDK v3.0.0 (06/27/2012)
--------------------------------
* Platform:
 - arm-darwin
 - arm-android
 - ix86-linux
 - arm-linux
 - ix86-win

* Added: Speaker Verification, Speaker Identification, Gender Detection
* API change: added thfSpeaker functions
* API change: retired thfVerify functions
* Upgraded internal names data structure
* API change: thfRecogCreateFromFile and thfRecogCreateFromStatic: maxbuf argument changed from 'unsigned short' to 'unsigned long'
* Bug Fix: set KEEP_WAVE_WORD_PHONE flag when phrasespotting (required for DPP)
* Replace hardcoded longpen parameter with net default 
* Added configuraable longpen parameter to thfSearchConfigure and thfPhrasespotConfigure
* Updated documentation
* Bug fix: RecogPipe Sample: Undefined function audioLast();
* Allow phrasespotting to use speech detector  
* BuildList/staticBuildList samples: do not call thfTextNormalize() for phrase *nota to avoid generating bad pronunciation
* Updated thfRecogResult() documentation for phrasespot usage
* Upgraded Samples to use adapted 'hello blue genie' models
* arm-android: updated BuildList.c sample to call thfTextNormalize()
* ix86-linux: Added ALSA audio interface (linux)


TrulyHandsfree SDK v2.5.1 (12/16/2011)
--------------------------------
* Platform:
 - arm-android
* Added support for retrieving word and phone alignments with phrasespotting
* Added support for using speech detection with phrasespotting
* Development API for tuning (do not use -- in progress)


TrulyHandsfree SDK v2.5.0 (11/16/2011)
--------------------------------
* Platform:
 - arm-android
* Updated Samples


TrulyHandsfree SDK v2.5.0 (8/17/2011)
--------------------------------
* Platform:
 - arm-darwin (aka iOS)
* Updated Samples
 - Added phrasespotting
 - Added staticBuildList 
 - Added staticRecogList


TrulyHandsfree SDK v2.5.0 (6/24/2011)
--------------------------------
* Platform:
 - ix86-win
* Fixed phrasespot MPG restart bug
* Added phrasespot duration post-filtering
* Changed PHRASESPOT mask definitions in trulyhandsfree.h
* API change to thfPhrasespotConfigure
* Updated staticBuildList data structures to support optional LTS fields
* Updated SDK Samples
* Updated documentation


TrulyHandsfree SDK v2.4.8 (2/11/2011)
--------------------------------
* Platform:
 - Arm-Cortex A8 3.1  (built libs only; custom file IO)
 - Arm-Cortex A8 4.1  (built libs only; custom file IO)
 - Arm11 (built libs only; custom file IO)
 - ix86-win (built libs only)
 - ix86-mingw (built libs only)
 - arm-android (API level 6 and above; built libs only)
* Updated orthographic normalization (required for Japanese and Mandarin)
* Added support for MPG phrasespotting

KNOWN ISSUES:
* staticBuildList generates bad pronunciations; Possible issue with dumped pronun or textnorm static data  


TrulyHandsfree SDK v2.4.7 (2/15/2011)
--------------------------------
* Platform:
 - arm-android (API level 6 and above)
* Added Incremental Build Sample


TrulyHandsfree SDK v2.4.7 (2/14/2011)
--------------------------------
* Platform:
 - Arm-Cortex A8 3.1  (built libs only; custom file IO)
 - Arm-Cortex A8 4.1  (built libs only; custom file IO)
 - Arm11 (built libs only; custom file IO)
 - ix86-win (built libs only)
 - ix86-linux (built libs only)
 - ix86-mingw (built libs only)
* Fixed crash bug in thfSearchSaveToFile() when saving phrasespot search
* Fixed memory leak in thfPhrasespotConfigure()


TrulyHandsfree SDK v2.4.6 (1/31/2011)
--------------------------------
* Platform:
 - Arm-Cortex A8 3.1  (built libs only; custom file IO)
 - ix86-linux (built libs only)
* Avoids filename conflict: Renamed utf.c -> sutf.c 
* Custom file handling stub


TrulyHandsfree SDK v2.4.5 (1/26/2011)
--------------------------------
* Platform:
 - arm-android (API level 6 and above)


TrulyHandsfree SDK v2.4.5 (1/18/2011)
--------------------------------
* Platform:
 - Arm-Cortex A8 3.1  (built libs only; custom file IO)
 - Arm-Cortex A8 4.1  (built libs only; custom file IO)
 - Arm11 (built libs only; custom file IO)
 - ix86-win (built libs only)
 - ix86-linux (built libs only)
 - ix86-mingw (built libs only)
* Custom file handling stub
* Bug Fix: crash bug when deleting an entire grammar during incremental build


TrulyHandsfree SDK v2.4.4 (1/05/2011)
---------------------------------
* Platform:
 - Arm-Cortex A8  (built libs only; custom file IO)
* Renamed internal function to workaround symbol name clash. 
* Bug fix: language files fail to load if language contains more than 128 phoneme symbols (e.g. UK English, French).
* Bug fix: corrected thfTextNormalize_p stub in trulyhandsfree.h file. 
* Added thfTextNormalize() to BuildList example 


TrulyHandsfree SDK v2.4.3 (12/02/2010)
----------------------------------
* Platform:
 - ix86-win
* Added support for incremental building of searches
* Added BuildIncremental Sample
* API added: thfSearchCreateIncremental()
* Removed support for creating/using pronunciation graphs
* API removed: thfPronunToGraph()
* API removed: thfPronunGraphDestroy()
* API removed: thfPronunGraphGetName()
* API removed: thfSearchCreateGrammarFromGraphs()
* API removed: thfPronunGraphsToFile()
* API removed: thfPronunGraphsFromFile()
* Bug fix: potential memory overwrite if thfPronunCompute() called with suffix=NULL 
* Bug fix: BuildList Sample had 'wrong number of arguments' in unused EXPLICIT_PRONUN branch

---KNOWN ISSUES---
 * thfSearchCreateIncremental(): when removing phrases from a grammar, it's possible that they certain paths are not completely removed from the search and thus the recognizer may still return the removed phrase in the results. In this circumstance, the removed phrase should be ignored.


TrulyHandsfree SDK v2.4.2 (11/09/2010)
----------------------------------
* Platform:
 - arm-darwin (iPhone 4.1)


TrulyHandsfree SDK v2.4.2 (11/08/2010)
----------------------------------
* Platform:
 - ix86-liunx (Kernel: 2.6.32)


TrulyHandsfree SDK v2.4.2 (11/03/2010)
----------------------------------
* Platform:
 - arm-android (API level 6 and above)
* Bug fix: uninitialized variable bug in container code
* Bug fix: pronunciation model (lts_en_us_8.15) caused bad pronunciations
* Bug fix: fixed search path in installer
* Added detection and scaling for clipped audio
* New pronunciation model: lts_en_us_8.15.1


TrulyHandsfree SDK v2.4.0 (9/17/2010)
----------------------------------
* Platform:
 - arm-android (API level 6 and above)
* Initial release


TrulyHandsfree SDK v2.4.0 (7/26/2010)
----------------------------------
* Platform:
 - iPhoneOS 4.0
* Updated phrasespotting
  - API change: added thfPhrasespotConfigure() command 
  - API change: removed 'phrasespotPrior' parameter from thfSearchConfigure()
* Added support for text normalization condition codes
  - API change: added 'conditionCode' to thfTextNormalizeText()
* Added support for pronunciation dialects
 - API change: added 'dialectIndex' to thfPronunCreateFromFile(), thfPronunCreateFromStatic() 
 - API chance: added 'dialectIndex' to CreatePronun utility.
* Complain if grammar contain comma ',' symbol
* Complain if 'null' pronunciation is given to search create functions.


TrulyHandsfree SDK v2.3.1 (1/27/2009)
----------------------------------
* Platform:
 - ix86-win
* Bug fix: thfRecogCreateHybrid() and thfSearchCreateFromFile() crashed with pre-built search
* Updated HybridRecog Sample


TrulyHandsfree SDK v2.3.0 (1/20/2009)
----------------------------------
* Platform:
 - ix86-win
* Added support for hybrid recognition technology
* API addition: added thfRecogCreateHybrid()
* Added HybridRecog Sample
* Added 16kHz digits acoustic model: nn_en_us_digits_digit_mfcc_15_250_v6.2
* Updated text normalization model: tnorm_en_us_1.1
* Updated pronunciation model: lts_en_us_8.13
* Updated documentation


TrulyHandsfree SDK v2.2.1 (11/02/2009)
----------------------------------
* Platform(s): 
  - ix86-linux-2.6.28
  - arm-le-linux-2.6.28 (target: ARM926EJ-S, little endian, Freescale BSP)
* Added PhraseSpotting V2 support
* API change: thfSearchCreateFromGrammar(): added Phrasespotting argument 
* API change: thfSearchConfigure(): added PhaseSpot_Prior argument
* Added PhraseSpot Sample
* Added PhraseSpotting to documentation


TrulyHandsfree SDK v2.2.0 (10/05/2009)
----------------------------------
* Platform(s): 
  - ix86-linux-2.6.28
  - arm-le-linux-2.6.28 (target: ARM926EJ-S, little endian, Freescale BSP)
* New search structure (usearch/searchfC8) incompatible with prior SDK versions.
* Updated Data models (v6)
 - acoustic models (nn_en_us_mfcc_8/16k_big_250_v4.5)
 - pronunciation models (lts_en_us_v8.12)
 - text normalization models (textnorm_en_us_v0.7)
* Renamed Linux directory structure "FluentSDK" -> "TrulyHandsfree SDK"
* TTS component not included.


TrulyHandsfree SDK v2.1.0 (02/17/2009)
----------------------------------
* initial iPhone platform release
* API addition: Added thfVersion() call that returns SDK version.
* Includes iPhone Samples


TrulyHandsfree SDK v2.1.0 (02/03/2009)
----------------------------------
* New acoustic models (en_us_4.3). These omit the duration model which was hurting accuracy
* New pronunciation models and phonology scheme.
* Implemented improved nbest.
* API change: Added 'nbest' argument to all "thfSearchCreate" funcs. 
* API addition: added support for saving/loading/building using intermediate pronunciation graphs for greater speed.
* New search structure (usearch/searchfC5) incompatible with prior builds.
* Fixed bugin RecogPipe sample; RECOG_SOUND treated as speech detector end condition.
* Changed fsdet backoff from 200 to 300 ms.
* Fixed bug in thfRecogGetSpeechRange reporting incorrect 'from' value


TrulyHandsfree SDK v2.0.1 (04/15/2007)
----------------------------------
* Fixed audio buffer overflow issue.


TrulyHandsfree SDK v2.0.0 (01/18/2007)
----------------------------------
* New energy-based speech detector algorithm.
* Updated acoustic models.
* Updated pronunciation models.
* Faster search compilation using thfSearchFromList()
* Improved phonology modeling including support for stress and syllable boundary markup.
* Improved duration modeling.
* Revised speaker verification technology (API changed; see documentation).
* Revised phonetic alphabet (see language-specific documenation).
* Revised thfRecogConfigure function (API changed; see documentation).
* Added support for part-of-speech to thfPronunCompute().
* Added wavePlayStop() function


TrulyHandsfree SDK v1.5.0 (09/19/2005)
----------------------------------

Built: Monday Sep 19 12:19:21 Pacific Standard Time 2005

* The install directory structure has changed.  Data files are now located in
  \Program Files\Sensory\TrulyHandsfree SDK\Data\ and platforms are located in
  \Program Files\Sensory\TrulyHandsfree SDK\<Platform>\<version>.
* Added speaker verification functionality to the SDK.  See the documentation
  for details.


TrulyHandsfree SDK v1.4.2 (08/08/2005)
----------------------------------

Built: Tue Aug 08 4:27:04 Pacific Standard Time 2005

* Updates thfWavePlay to support variable samplerate (Windows OS and derivatives). (7/8/05)
* Updates search containers to searchfC3. (7/8/05)
* Fixed internal search initialization bug that caused unpredicatble scores in certain recursive grammar structures. (7/8/05)
* Added explicit casts into imfccdd code to solve underflow issue caused by PocketPC203 compiler bug than made thfRecogLive hang. (6/21/05).
* Fixed bug in thfRecogSampleConvert to prevent an attempt to allocate zero
  length buffer when not enough input is supplied
* Updated samples to use 7.5 pronunciation model.
* Updated en_us data files to v3.


TrulyHandsfree SDK v1.4.0 (04/05/2005)
----------------------------------

Built: Tue Apr 05 11:20:04 Pacific Standard Time 2005

* Improved N-best pronunciation modeling:
  - No longer returns empty pronunciations
  - Fixed pronunciation for numerics (e.g. '2')
  - Spells unpronouncable words
  - Updated pronunciation model from 7.3 to 7.4

* Modified Samples to use new 7.4 pronunciation model

* Added explicit "__cdecl" to thfAudioCB_t declaration in trulyhandsfree.h to
  workaround compiler bug affecting Smartphone 2003 and PocketPC 2003
  emulation.

* Fixed a bug in the grammar parser that failed to handle certain
  whitespace combinations in the grammar specification.

* Normalized word and phoneme alignment scores returned by
  thfRecogResult() and thfRecogLive() to be confidence scores and
  ignore zero length words (i.e., pauses).

* Changed format of task-specific nets to include pre-defined word
  list and pronunciations.

* Updated acoustic model creation, loading and search compilation code
  to handle new format for task-specific acoustic models.


TrulyHandsfree SDK v1.4.0 alpha release (03/03/2005) 
------------------------------------------------

* Built: Thu Mar 03 11:05:37 Pacific Standard Time 2005

* New US English acoustic and pronunciation models using a 
  new phoneme inventory

* Updated internal speech recognition algorithm:
  - faster compilation (~ x10 speed up)
  - faster recognition (~ x2 speed up)
  - smaller RAM (~ 0.5 size)

* Improved phonological pre-processing in search compiler.

* Fixed various memory leaks

* Fixed 'edge' effect bug in thfRecogSampleConvert

* Fixed internal speech detector buffering bugs

* Fixed documentation errors.  

* Renamed "Fluent Speech" to "TrulyHandsfree"


Fluent Speech SDK v1.3.1 (8/09/2004)
------------------------------------

* Speeded up vocabulary compilation (~3x faster)

* Fixed bug in thfRecogLive(); Half-duplex synchronization was not
  working properly.

* Modified thfRecogLive() internals: Added code to discard NULL audio
  at start of recording; This addresses the issue that some devices
  initially produce poor audio due to slow start up of audio hardware.

* Modified thfRecogLive() internals: Changed audio code to always
  (re)open the audio device before recording; workaround for a bug
  observed in certain audio drivers.

* Changed minduration speech detector default setting from 350 to 100
  ms. This was preventing short words from being recognized reliably.

* Fixed audio synchronization bug that causes thfWavePlay() to hang on
  occasions.

* Fixed bug in thfRecogLive(); pipelined early-stop mechanism can
  cause the search to return prematurely before processing all the
  audio.

* Fixed in bug thfRecogLive(); integration between speech detector and
  search that can cause search to return prematurely.

* API change: Added AUDIO_BUFFER_MAX as a possible audio callback
  message; Used to report maximum amplitude of last audio buffer.

* Made thfRecogGetClipping() measure more sensitive; Changed limit 
  from 32700 to 32000

* Changed pronunciation N-best from 3 to 2 in BuildList and 
  StaticBuildList samples. 

* thfRecogPipe() internal modifications:
  - Bug fix: problem keeping wave in RECOG_ONLY mode.
  - Bug fix: features not flushed in RECOG_ONLY mode.
  - Bug fix: problem calculating speech detector early-stop times.
  - Mod: disabled speech detector penalty in search update


Fluent Speech SDK v1.3.0 (7/19/2004)
-----------------------------------------------------
* Reorganized SDK hierarchy

* Incorporated support for language packs

* Incorporated support for platform packs

* Made Samples platform specific

* Updated documentation

* Added 8kHz acoustic models.

* Fixed memory allocation error with certain USB microphone devices.

* API change: thfRecogLive(); Refer to documentation.

 - added "haltSemaphore" parameter that can used to force the audio
   device to stop recording rather than waiting for the speech
   detector to do so.

* Added RecogPipe Sample that demonstrates how to do pipelined
  recognition using your own audio interface.

* Fixed bug in thfRecogPipe(); pipelined early-stop mechanism can cause 
  the search to return prematurely before processing all the audio.

* Fixed in bug thfRecogPipe(); integration between speech detector and 
  search that can cause search to return prematurely. 


Fluent Speech SDK v1.2.0 (3/31/2004)
------------------------------------
* Updated documentation and readme files.

* Updated Embedded port to WinCE 4.2, including:
  - Pocket PC 2003 (arm9-based and emulator)
  - Smart Phone 2003 (NOT TESTED) 

* Added debug libraries for WinCE 4.2 platforms

* Updated internal speech detector technology:
  - Supports multiple sample rates.
  - Improved noise robustness.
  - No calibration required.
 
* Updated internal search technology.
  - Incorporates grammar-level phonology.
  - Improved size and speed.

* Added 16kHz acoustic models.

* Added integrated audio support; Refer to documentation.
  - Added thfSessionCreateWithAudio()
  - Added thfRecogLive()
  - Added thfWavePlay()
  - Added thfAudioGain()
  - Added audio callback prototype "thfAudioCB_t"

* API change: thfRecogConfigure(); Refer to documentation.
  - Retired "calibration" parameter
  - Retired "minamplitude" parameter
  - Retired "minvoicing" parameter
  - Retired "adaptive" parameter
  - Added "energyThreshold" parameter
  - Added "speechThreshold" parameter

* API change: thfRecogCalibrateLevel() retired.

* API change: recogCal_t data structure retired.

* thfRecogResult() and thfRecogLive() now report word alignment scores and phoneme alignment scores as confidence score instead of log probabilities.

* Updated SDK Samples to reflect API changes and new audio interface


Fluent Speech SDK v1.1.0 (9/23/2003)
------------------------------------
* Updated 8kHz acoustic models for improved accuracy. New ones are
  available in two sizes (161 and 407 hidden units) and two
  sample-rates (15 and 20ms). NOTE: file names have changed. Refer to
  nn_en_us_8kHz_WSJ_performance.jpg for performance comparison.

* Updated pronunciation models for improved accuracy. NOTE: file names
  have changed.

* Added internal phonology rules to pronunciation generation for
  improved accuracy.

* Updated Samples to use new acoustic models and new pronunciation
  models.

* Changed data location on "wince" platforms from "\Program
  Files\Sensory\SDK Samples" to "\Program Files\Sensory\Fluent Speech
  SDK\Samples".

* Fixed duration modeling bug that made duration penalties ineffective.

* Fixed potential data alignment bug on "wince" that could crash licensing.

* Fixed hard-coded installation path in thfSDKStubs.c file.

* Fixed internal memory bug when initializing feature extractor that
  could cause an access violation.


Fluent Speech SDK v1.0.0 (9/11/2002)
------------------------------------
* Initial public release

