From 710000de2027aa4b63a13cae312795dff6203329 Mon Sep 17 00:00:00 2001
From: Yamit Mehta <ymehta@codeaurora.org>
Date: Mon, 7 Nov 2016 16:30:09 +0530
Subject: [PATCH] pcm: add support to set silence_size

Tinyalsa always set silence_size to zero. Add support to set this
pcm software parameter as required.
---
 include/tinyalsa/asoundlib.h | 9 ++++++---
 pcm.c                        | 2 +-
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/git/include/tinyalsa/asoundlib.h b/git/include/tinyalsa/asoundlib.h
index 8fb7c95..0ee35fe 100644
--- a/git/include/tinyalsa/asoundlib.h
+++ b/git/include/tinyalsa/asoundlib.h
@@ -87,17 +87,20 @@ struct pcm_config {
     unsigned int period_count;
     enum pcm_format format;

-    /* Values to use for the ALSA start, stop and silence thresholds.  Setting
-     * any one of these values to 0 will cause the default tinyalsa values to be
-     * used instead.  Tinyalsa defaults are as follows.
+    /* Values to use for the ALSA start, stop and silence thresholds, and
+     * silence size.  Setting any one of these values to 0 will cause the
+     * default tinyalsa values to be used instead.
+     * Tinyalsa defaults are as follows.
      *
      * start_threshold   : period_count * period_size
      * stop_threshold    : period_count * period_size
      * silence_threshold : 0
+     * silence_size      : 0
      */
     unsigned int start_threshold;
     unsigned int stop_threshold;
     unsigned int silence_threshold;
+    unsigned int silence_size;
     int avail_min;
 };

 /* PCM parameters */
diff --git a/git/pcm.c b/git/pcm.c
index 2c1308d..df58b8c 100644
--- a/git/pcm.c
+++ b/git/pcm.c
@@ -743,8 +743,8 @@ struct pcm *pcm_open(unsigned int card, unsigned int device,
         sparams.stop_threshold = config->stop_threshold;

     sparams.xfer_align = config->period_size / 2; /* needed for old kernels */
-    sparams.silence_size = 0;
     sparams.silence_threshold = config->silence_threshold;
+    sparams.silence_size = config->silence_size;
     pcm->boundary = sparams.boundary = pcm->buffer_size;

     while (pcm->boundary * 2 <= INT_MAX - pcm->buffer_size)
--
1.8.2.1

