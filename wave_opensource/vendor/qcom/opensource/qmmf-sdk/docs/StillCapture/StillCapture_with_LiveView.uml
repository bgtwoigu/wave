title Still Capture with Live View

Client->Recorder:StartCamera(camera_id, camera_start_params)
						 
opt preview
Client->Recorder:CreateSession(session_uuid_preview, session_cb_preview)
Client->Recorder:createVideoTrack(session_uuid_preview,track_id,params,track_cb=NULL)
Client->Recorder:StartSession(session_uuid_preview)

opt on error
Recorder-->Client:session_event_cb(event_type=kError,event_data=error_code)
Client->Recorder:StopSession(session_uuid_preview,do_flush=1)
Recorder-->Client:session_cb(event_type=kStateChanged,State=STOPPED)
Client->Recorder:DeleteVideoTrack(session_uuid_peview,track_id)
Client->Recorder:DeleteSession(session_uuid_preview)
end

Recorder-->Client:session_cb(event_type=kStateChanged,State=STARTED)

loop preview data cbs
Recorder-->Client:video_track_data_cb(buffers,meta_param,meta_type,meta_size)

opt on preview track error
Recorder-->Client:video_track_event_cb(event_type=kError,event_data=error_code)
Client->Recorder:StopSession(session_uuid_preview,do_flush=1)
Recorder-->Client:session_cb(event_type=kStateChanged,State=STOPPED)
Client->Recorder:DeleteVideoTrack(session_uuid_peview,track_id)
Client->Recorder:DeleteSession(session_uuid_preview)
end

opt modify camera sensor/ISP specific params 
Client->Recorder:GetCameraParam(camera_id,camera_param_type,param,param_size)
Client->Recorder:SetCameraParam(camera_id,camera_param_type,param,param_size)
end

Client->Recorder:CaptureImage(camera_id, image_param,capture_image_cb)
loop 
note right of Client: for each picture a separate callback is called 
Recorder-->Client: picture_cb(image_sequence_count, image_data)
note right of Client: during continuous capture, the client calls \n CancelCaptureImage() to cancel capturing of images 
Client->Recorder: CancelCaptureImage()
end
Client->Recorder:StopSession(session_uuid_preview, do_flush=0)
Recorder-->Client:session_cb(event_type=kStateChanged,State=STOPPED)
Client->Recorder:DeleteVideoTrack(session_uuid_preview,track_id)
Client->Recorder:DeleteSession(session_uuid_preview)
end
Client->Recorder:StopCamera(camera_id)